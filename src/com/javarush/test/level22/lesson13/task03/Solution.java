package com.javarush.test.level22.lesson13.task03;

import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/* Проверка номера телефона
Метод checkTelNumber должен проверять, является ли аргумент telNumber валидным номером телефона.
Критерии валидности:
1) если номер начинается с '+', то он содержит 12 цифр
2) если номер начинается с цифры или открывающей скобки, то он содержит 10 цифр
3) может содержать 0-2 знаков '-', которые не могут идти подряд
4) может содержать 1 пару скобок '(' и ')'  , причем если она есть, то она расположена
левее знаков '-'
5) скобки внутри содержат четко 3 цифры
6) номер не содержит букв
7) номер заканчивается на цифру

Примеры:
+380501234567 - true
+38(050)1234567 - true
+38050123-45-67 - true
050123-4567 - true

+38)050(1234567 - false
+38(050)1-23-45-6-7 - false
050ххх4567 - false
050123456 - false
(0)501234567 - false

RegexBuddy 4.1.3
http://www.friendlyfunction.com/ru/category/java/regular-expressions/


+380501234567
+38(050)1234567
+38050123-45-67
050123-4567
(345)0512027
++380501234567
1-23456789-0
-87987797--5

+38)050(1234567
+38(050)1-23-45-6-7
050ххх4567
050123456
(0)501234567
+-313450531202-

Может кому-то поможет:
Решил в 8 строк
1) Проверка на пустую строку.
2) Проверка на последнюю цифру.
3) Проверка на количество цифр.
4) Регулярное выражение. Где-то 30 символов.
Логика такая:
Начинается с "+" или нет/ цифры или нет/ скобки с 3 цифрами или нет/ цифры или нет/
(тире с цифрой или нет) или нет/ цифры или нет/ (тире с цифрой или нет) или нет/ цифры или нет.


\+[\(\-]?(\d[\(\)\-]?){11}\d

\(?(\d[\-\(\)]?){9}\d

[\+]?\d*(\(\d{3}\))?\d*\-?\d*\-?\d*\d
*/
public class Solution {

    public static boolean checkTelNumber(String telNumber) {
//        boolean tmp = false;
//        if (telNumber != null) {
//        Pattern pattern = Pattern.compile("^((\\+\\d{2})?\\(?(\\d{3})\\)?\\d{3}\\-?\\d{2}\\-?\\d{2})");
//        Pattern pattern = Pattern.compile("^((\\+\\d{2})?\\(?(\\d{3})\\)?\\d+\\-?\\d+\\-?\\d+)$");
//            Pattern pattern = Pattern.compile("^(\\+?)(\\d+)?(\\(\\d{3}\\))?(\\d+)?(\\-(\\d+)?)?(\\d+)?(\\-(\\d+)?)?(\\d+?)$");
//            if (telNumber.matches("^(\\+?)(\\d+)?(\\((\\d{3})\\))?(\\d+)?(\\-?\\d+)?(\\d+)?(\\-?\\d+)?(\\d+)?$")) {
//                tmp = true;
//            }
//            else tmp = false;

//        }
        return ((telNumber.matches("^\\+[\\(\\-]?(\\d[\\(\\)\\-]?){11}\\d$") || telNumber.matches("^\\(?(\\d[\\-\\(\\)]?){9}\\d$"))
                && telNumber.matches("[\\+]?\\d*(\\(\\d{3}\\))?\\d*\\-?\\d*\\-?\\d*\\d$"));
    }

//    public static void main(String[] args) {
//        ArrayList<String> list = new ArrayList<>();
//        list.add("+380501234567");
//        list.add("+38(050)1234567");
//        list.add("+38050123-45-67");
//        list.add("050123-4567");
//        list.add("(345)0512027");
//        list.add("+38)050(1234567");
//        list.add("+38(050)1-23-45-6-7");
//        list.add("050ххх4567");
//        list.add("050123456");
//        list.add("(0)501234567");
//        list.add("+-313450531202-");
//
//        list.add("+380501234523");
//        list.add("+38(050)1234567");
//        list.add("+38050(123)(456)7");
//        list.add("++380501234567");
//        list.add("(380)5012345");
//        list.add("+38050123--4567");
//        list.add("050123--4567");
//        list.add("0-50123-4567");
//        list.add("+38)050(1234567");
//        list.add("+38(050)1-23-45-6-7");
//        list.add("050ххх4567");
//        list.add("050123456");
//        list.add("(0)501234567");
//        list.add("+38-(050)1234567");
//        list.add("+38((050)1234567");
//        list.add("+5(0--5)1234567");
//        list.add("1-23456789-0");
//        list.add("+38051202(345)-7");
//        list.add("+38051202(345)7");
//        list.add("+38051202(345)7");
//        list.add("+-313450531202");
//        list.add("+313450--531202");
//        list.add("38xx501A34567");
//        list.add("3805012345");
//        list.add("+38(0501234567");
//        list.add("+38(050)1234567");
//        list.add("+38(05)1234567");
//        list.add("(3)80501234567");
//        list.add("380-50123-45");
//        list.add("(380)501-234567");
//        list.add("(38-0)501234567");
//        list.add("380-(501)234567");
//        list.add("380(50-1)234567");
//        list.add("380(501)(23)4567");
//        list.add("+38050123(456)7");
//        list.add("+38050123(456)76");
//        list.add("+380501234(567)");
//        list.add("3-805-0123-45");
//        list.add("-3805-012345");
//        list.add("3805-012345-");
//        list.add("+38(05)01234567");
//        list.add("+38(0501)234567");
//        list.add("+38050123-45-67");
//        list.add("050123-4567");
//        list.add("7-4-4123689-5");
//        list.add("(380)501-234567");
//        list.add("+--313450531212");
//        list.add("+313450--531202");
//        list.add("+38051202(345)-7");
//        list.add("+313450--531202Э");
//        list.add("(050)34(125)6-7");
//        list.add("+(012)1-2345678-9");
//        list.add("-3805012345-67");
//        for (String s : list) {
//            System.out.println(s + " : " + Solution.checkTelNumber(s));
//        }
//    }
}
